[{"C:\\Users\\david\\git\\netflixclone\\src\\index.js":"1","C:\\Users\\david\\git\\netflixclone\\src\\App.js":"2","C:\\Users\\david\\git\\netflixclone\\src\\Tmdb.js":"3","C:\\Users\\david\\git\\netflixclone\\src\\components\\MovieRows.js":"4","C:\\Users\\david\\git\\netflixclone\\src\\components\\FeatureMovie.js":"5"},{"size":199,"mtime":1610065543427,"results":"6","hashOfConfig":"7"},{"size":1099,"mtime":1610072694384,"results":"8","hashOfConfig":"7"},{"size":2573,"mtime":1610072561772,"results":"9","hashOfConfig":"7"},{"size":673,"mtime":1610070841028,"results":"10","hashOfConfig":"7"},{"size":1714,"mtime":1610075372330,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"in4gpv",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\david\\git\\netflixclone\\src\\index.js",[],["26","27"],"C:\\Users\\david\\git\\netflixclone\\src\\App.js",["28"],"import React, { useEffect, useState } from 'react';\nimport Tmbd from './Tmdb';\nimport MovieRows from './components/MovieRows';\nimport './App.css';\nimport FeatureMovie from './components/FeatureMovie';\n\nexport default () => {\n\n  const [movies, setMovies] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmbd.getHomeList();\n      setMovies(list);\n\n      let originals = list.filter(i => i.slug === 'originals');\n      let random = Math.floor(Math.random() * (originals[0].items.results.length - 1))\n\n      let choosen = originals[0].items.results[random];\n\n      let movieInfo = await Tmbd.getMovieInfo(choosen.id, 'tv');\n\n\n      setFeaturedData(movieInfo);\n    }\n\n    loadAll();\n  }, []);\n\n  return (\n    <div className=\"page\">\n\n\n      {featuredData &&\n        <FeatureMovie item={featuredData}/>\n      }\n\n\n      <section className=\"lists\">\n        {movies.map((item, key) => (\n          <MovieRows key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n    </div>\n  );\n}","C:\\Users\\david\\git\\netflixclone\\src\\Tmdb.js",["29","30"],"const API_KEY = '53bf1c912bd09986a60f2a895daaf6c2';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n\r\n\r\nconst basicFecth = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                'slug': 'originals',\r\n                'title': 'Originais da Netflix',\r\n                'items': await basicFecth(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                'slug': 'trending',\r\n                'title': 'Recomendados',\r\n                'items': await basicFecth(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                'slug': 'toprated',\r\n                'title': 'Em Alta',\r\n                'items': await basicFecth(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                'slug': 'action',\r\n                'title': 'Ação',\r\n                'items': await basicFecth(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                'slug': 'comedy',\r\n                'title': 'Comédia',\r\n                'items': await basicFecth(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                'slug': 'horror',\r\n                'title': 'Terror',\r\n                'items': await basicFecth(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                'slug': 'romance',\r\n                'title': 'Romance',\r\n                'items': await basicFecth(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                'slug': 'documentary',\r\n                'title': 'Documentário',\r\n                'items': await basicFecth(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ]\r\n    },\r\n\r\n    getMovieInfo : async (movieId, type) => {\r\n        let info = {};\r\n\r\n        if (movieId) {\r\n            switch(type) {\r\n                case 'movie' :\r\n                    info = await basicFecth(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFecth(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n            }\r\n        }\r\n\r\n        return info;\r\n    }\r\n\r\n}","C:\\Users\\david\\git\\netflixclone\\src\\components\\MovieRows.js",["31"],"import React from 'react';\r\nimport './MovieRows.css';\r\n\r\nexport default ({title, items}) => {\r\n    return(\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\">\r\n                {items.results.length > 0 && items.results.map((item, key) => (\r\n                    <div className=\"movieRow--item\" key={key}>\r\n                        <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n                    </div>\r\n                ))}\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\david\\git\\netflixclone\\src\\components\\FeatureMovie.js",["32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":7,"column":1,"nodeType":"39","endLine":47,"endColumn":2},{"ruleId":"37","severity":1,"message":"40","line":13,"column":1,"nodeType":"39","endLine":76,"endColumn":2},{"ruleId":"41","severity":1,"message":"42","line":63,"column":13,"nodeType":"43","messageId":"44","endLine":70,"endColumn":14},{"ruleId":"37","severity":1,"message":"38","line":4,"column":1,"nodeType":"39","endLine":20,"endColumn":2},{"ruleId":"37","severity":1,"message":"38","line":4,"column":1,"nodeType":"39","endLine":39,"endColumn":2},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]